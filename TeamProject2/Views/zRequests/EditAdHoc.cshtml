@model TeamProject2.zRequest

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm("CreateAdHoc", "zRequests"))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>zRequest</legend>

        @Html.HiddenFor(model => model.WeekId)
        @Html.HiddenFor(model => model.zWeek.WeekId)

@* This partial view defines form fields that will appear when creating and editing entities *@

        <script src="~/Scripts/weekselector.js"></script>
        <script src="~/Scripts/roomselector.js"></script>
        <link rel="stylesheet" type="text/css" href="~/Content/weekselector.css" />

        <div class="editor-label">
            @Html.Label("Department Code")
        </div>
        <div class="editor-field">
            @if (User.Identity.Name == "CA")
            {
                @Html.DropDownList("DeptCode")
            }
            else
            {
                @Html.DisplayText("DeptCode")
            }
        </div>

        <div class="editor-label">
            @Html.Label("Module")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ModCode")
        </div>

        <div class="editor-label">
            @Html.Label("Semester")
        </div>
        <div class="editor-field">
            
            @if (Model.Semester == 1)
            {
                @Html.RadioButton("Semester", "1", true, new { @onclick = "toggleWeeks(this.value)" }) <text>1</text>
                @Html.RadioButton("Semester", "2", false, new { @onclick = "toggleWeeks(this.value)" }) <text>2</text>
            }
            else
            {
                @Html.RadioButton("Semester", "1", false, new { @onclick = "toggleWeeks(this.value)" }) <text>1</text>
                @Html.RadioButton("Semester", "2", true, new { @onclick = "toggleWeeks(this.value)" }) <text>2</text>
            }
        </div>
        

        <div class="editor-label">
            @Html.Label("Weeks")
        </div>
        <div class="editor-field">
            <ol id="weekSelector">
                <li class="ui-state-default">1</li>
                <li class="ui-state-default">2</li>
                <li class="ui-state-default">3</li>
                <li class="ui-state-default">4</li>
                <li class="ui-state-default">5</li>
                <li class="ui-state-default">6</li>
                <li class="ui-state-default">7</li>
                <li class="ui-state-default">8</li>
                <li class="ui-state-default">9</li>
                <li class="ui-state-default">10</li>
                <li class="ui-state-default">11</li>
                <li class="ui-state-default">12</li>
                <li class="ui-state-default">13</li>
                <li class="ui-state-default">14</li>
                @if (Model.Semester != 1)
                {
                    <li class="ui-state-default">16</li>
                }
            </ol>
            <br /><br />
        </div>

        @Html.Hidden("Weeks")
        
        <div class="editor-label">
            @Html.Label("Day")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Day")
        </div>

        <div class="editor-label">
            @Html.Label("Period")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Period")
        </div>

        <script type="text/javascript">
            $(document).ready(function () {
                $("#Period").change(function () {
                    var pID = parseInt($(this).val());
                    var select = $("#SeshLength");
                    select.empty();
                    select.append("<option value = 1> 1 Hour </option>");
                    var hour = 2;
                    for (var i = pID; i <= 8; i++) {
                        select.append("<option value = " + hour + ">" + hour + " Hours </option>");
                        hour++;
                    }
                });
            });
        </script>

        <div class="editor-label">
            @Html.Label("Session Length")
        </div>
        <div class="editor-field">
            @Html.DropDownList("SeshLength")
        </div>

        <div class="editor-label">
            @Html.Label("Special Requirements")
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.SpecialRequirement)
        </div>

        <div class="editor-label">
            @Html.Label("Facilities")
        </div>
        <div class="editor-field">
            @foreach (var item in ViewBag.facilityList)
            {
                if (ViewBag.selectedFacilities.Contains(item))
                {
                    <input type="checkbox" name="Facilities" id="Facilities" value=@item.Replace(" ", ".") checked /> @item <br />
                }
                else
                {
                    <input type="checkbox" name="Facilities" id="Facilities" value=@item.Replace(" ", ".") /> @item <br />
                }
            }
        </div>

        <div class="editor-label">
            @Html.Label("Room - Park")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Park", new SelectList(ViewBag.parkList))
        </div>
        
        <div class="editor-label">
            @Html.Label("Room - Building")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Building", new SelectList(ViewBag.buildingList))
        </div>
        
        <div class="editor-label">
            @Html.Label("Room - Room")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Room", new SelectList(ViewBag.roomList))
        </div>

        <div class="editor-label">
            @Html.Label("Number of Students")
        </div>
        <div class="editor-field">
            <input type=range id=capacity min=1 value=100 max=400 oninput="outputUpdate(value)"/> <output for=capacity id=capOutput>100</output>
        </div>
        
        <script>
            function outputUpdate(cap) {
                document.querySelector('#capOutput').value = cap;
            }
        </script>

        <div class="editor-label">
            @Html.Label("Selected Rooms")
        </div>
        <div class="editor-field">
            @Html.DropDownList("RoomDisp", new SelectList(ViewBag.RoomDropDown), new { size = 5 }) 
            @Html.Hidden("Rooms")
            @Html.Hidden("Capacities")
        </div>
        
        <input type="button" id="AddRoom" value="Add Room" />
        <input type="button" id="RemoveRoom" value="Remove Room" />

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
