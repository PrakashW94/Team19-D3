@model IEnumerable<TeamProject2.zRequest>

@{
    ViewBag.Title = "Index";
}
<link rel="stylesheet" type="text/css" href="~/Content/timetable.css" />
<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
    @Html.ActionLink("Allocate Requests", "Allocate")
</p>

@using (Html.BeginForm()){ 
    <p>
        Filter Requests: @Html.TextBox("filter")
        <input type="submit" value="Filter" />
        @Html.ActionLink("Reset Request View", "Index") @*Returns view to default easily*@
    </p>
}

<table>
    <tr>
        <th>Actions</th>
        <th>Request Id</th>
        <th>@Html.ActionLink("Module Code", "Index", new { sortOrder = ViewBag.ModSortParm })</th>
        <th>@Html.ActionLink("Number of Rooms", "Index", new { sortOrder = ViewBag.NumRoomSortParm })</th>
        <th>@Html.ActionLink("Number of Facilities", "Index", new { sortOrder = ViewBag.NumFacSortParm })</th>
        <th>Weeks</th>
        <th>@Html.ActionLink("Day", "Index", new { sortOrder = ViewBag.DaySortParm })</th>
        <th>Start Time</th>
        <th>Session Length</th>
        <th>Notes</th>
        <th>@Html.ActionLink("Status", "Index", new { sortOrder = ViewBag.StatSortParm })</th>
    </tr>

@foreach (var item in Model) 
{
    <tr>
        <td>

        </td>
        <td>
			@item.RequestId
        </td>
        <td>
			@item.ModCode
        </td>
        <td>
            @{
                List<string> selectedRoomsDisp = new List<string>();
                /*
                var dbRooms = item.zRoomBooking.Count(); //number of rooms in the db
                var diff = item.RoomCount - dbRooms;
                for (var i = 0; i < diff; i++)
                { //diff is the number of any rooms
                    selectedRoomsDisp.Add("Any Room");
                }
                */
                foreach (var booking in item.zRoomBooking)
                {
                    switch (booking.Type)
                    {
                        case 0:
                            selectedRoomsDisp.Add("Any room");
                            break;
                            
                        case 1: //any room in a park
                            selectedRoomsDisp.Add("Any room in the " + booking.zPark.ParkName + " Park");
                            break;

                        case 2: //any room in a building

                            selectedRoomsDisp.Add("Any room in " + booking.zBuilding.BuildingCode + " - " + booking.zBuilding.BuildingName);
                            break;

                        case 3: //specific room
                            selectedRoomsDisp.Add(booking.zRoom.RoomCode);
                            break;
                    }
                }
                <p title="@string.Join(", ", selectedRoomsDisp)">@item.RoomCount</p>
            }
        </td>
        <td>
            @{
                List<string> facName = new List<string>();
                foreach (var facility in item.zFacility)
                {
                    facName.Add(facility.FacilityName);
                }
                <p title="@string.Join(", ", facName)">@item.zFacility.Count</p>
            }
        </td>
        <td>
            @Html.Hidden("RequestIdList")
            @Html.Hidden(@item.RequestId + "")
            <div id="WeekDisp-@item.RequestId"></div>
        </td>
        <td>
			@item.zDay.DayValue
        </td>
        <td>
            @item.zPeriod.PeriodId - @item.zPeriod.PeriodValue
			
        </td>
        <td>
			@item.SessionLength
        </td>
        <td>
			@if (item.SpecialRequirement == null)
            {
                <p title="N/A">None</p>
            }
            else
            {
                <p title ="@item.SpecialRequirement">Hover to View</p>
            }
        </td>
        <td>
			@item.zStatus.StatusValue
        </td>
    </tr>
}

<script type="text/javascript">
    $(document).ready(function ()
    {
        setSelectedWeeks();
    })

    function setSelectedWeeks() 
    {
        var IdList = $("#RequestIdList").val().split(',');

        for (var c = 0; c < IdList.length; c++)
        {
            var selectedItems = document.getElementsByName(IdList[c])[0].value.split(',');
            var length = selectedItems.length;
            var output = [];
            var i, j;

            for (i = 0; i < length; i = j + 1) {
                // Beginning of range or single
                output.push(selectedItems[i]);

                // Find end of range
                for (var j = i + 1; j < length && parseInt(selectedItems[j]) == parseInt(selectedItems[j - 1]) + 1; j++);
                j--;

                if (i == j) {
                    // single number
                    output.push(", ");
                }
                else {
                    if (i == j) {
                        // two numbers
                        output.push(", ", selectedItems[j], ", ");
                    }
                    else {
                        // range
                        output.push(" - ", selectedItems[j], ", ");
                    }
                }
            }

            output.pop(); // remove trailing comma
            $("#WeekDisp-" + IdList[c]).append(output.join(""));
        }
                    
    }
</script>
</table>

<h2>Timetable</h2>

@{
    string[] days = { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" };
}

<table class="ttView">
    @for (var i = 0; i <= 5; i++)
    {
        <tr class="ttViewtr">
            @for (var j = 0; j <= 9; j++)
            {
                if (i > 0 && j == 0)
                {
                    <td id="@(i - 1)" class="dayCell">
                        @days[i - 1]
                    </td>
                }
                else if (i == 0 && j != 0)
                {
                    <td class="periodTitleCell">
                        P@(j)
                        <br />
                        @(j + 8):00 - @(j + 9):00
                    </td>
                }
                else if (i == 0 && j == 0)
                {
                    <td></td>
                }
                else
                {
                    <td id="@(i + ',' + j)" class="periodCell">
                        @foreach (var item in Model)
                        {
                            // first period for session
                            if (item.DayId == i && item.PeriodId == j)
                            {
                                <div class="ttDisplay">
                                    @item.ModCode
                                    <hr class="tthr" />
                                    @item.RoomCount
                                </div>
                            }
                            // last period for session
                            else if (item.DayId == i && (item.PeriodId + (item.SessionLength - 1) == j))
                            {
                                <div class="ttDisplay">
                                    @item.ModCode
                                    <hr class="tthr" />
                                    @item.RoomCount
                                </div>
                            }
                            // periods inbetween
                            else if (item.DayId == i && ((item.PeriodId + (item.SessionLength - 1) >= j) && item.PeriodId <= j))
                            {
                                <div class="ttDisplay">
                                    @item.ModCode
                                    <hr class="tthr" />
                                    @item.RoomCount
                                </div>
                            }
                        }
                    </td>
                }
            }
        </tr>
    }
</table>






